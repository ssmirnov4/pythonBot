from aiogram.filters import CommandStart, Command, callback_data
from aiogram import F, Router, types
from aiogram.types import Message, CallbackQuery
import keyboards as kb
money = [100000, 300000, 350000, 700000, 1000000]
asks = ['–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ –ø–æ—Å–ª–æ–≤–∏—Ü—É: \"–õ—é–±–æ–≤—å –∑–ª–∞, –ø–æ–ª—é–±–∏—à—å –∏ .....\"', '–ß–µ–º –∫–ª–µ—è—Ç –æ–±–æ–∏?', '–ö –∫–∞–∫–æ–º—É –∫–ª–∞—Å—Å—É –æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –±–µ–Ω–∑–∏–Ω –ø—Ä–∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –µ–≥–æ –ø–µ—Ä–µ–≤–æ–∑–∫–∏?',
            '–í—Ä–µ–º—è –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –ø–∞—Å—Ç—ã Al dente?', '–ö–∞–∫–æ–π —Å—Ä–æ–∫ –Ω–∞ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏–µ —ç–∫—Å–ø–µ—Ä—Ç–∏–∑—ã –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–æ–º –†–§?']
ask = 0
winMoney = 0
router = Router()
buttonCondition = True
@router.message(CommandStart())
async def cmd_start(message: Message):
    await message.reply(f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.full_name}. –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —É—Ä–µ–∑–∞–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é –∏–≥—Ä—ã \"–ö—Ç–æ —Ö–æ—á–µ—Ç—Å—è —Å—Ç–∞—Ç—å –º–∏–ª–ª–∏–æ–Ω–µ—Ä–æ–º?\"',
                        reply_markup=kb.keyStart)

@router.message(F.text == '–°—Ç–∞—Ä—Ç')
async def game0(message: Message):
    global ask, winMoney, buttonCondition
    ask = 0
    winMoney = 0
    buttonCondition = True
    await message.reply('–û—Ç–ª–∏—á–Ω–æ, –∏–≥—Ä–∞ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ –ø—è—Ç–∏ –≤–æ–ø—Ä–æ—Å–æ–≤, –ø–æ–¥—Å–∫–∞–∑–æ–∫ –Ω–µ –±—É–¥–µ—Ç, —á—Ç–æ–±—ã –±—ã–ª–æ –Ω–µ —Ç–∞–∫ –ª–µ–≥–∫–æ',
                        reply_markup=kb.keyOk)

@router.message(F.text == '–û–∫')
async def game1(message: Message):
    await message.reply(f'–í–æ–ø—Ä–æ—Å ‚Ññ {ask+1}: {asks[ask]}', reply_markup=kb.key0)

@router.callback_query(F.data == 'true')
async def true(callback: CallbackQuery):
    global ask, winMoney, buttonCondition
    await callback.answer()
    if buttonCondition == False:
        await callback.answer("–í—ã —É–∂–µ –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å")
    if ask == 4 and buttonCondition == True:
        await callback.message.answer(
            f"–°–æ–≤–µ—Ä—à–µ–Ω–Ω–æ –≤–µ—Ä–Ω–æ! –Ø –í–∞—Å –ø–æ–∑–¥—Ä–∞–≤–ª—è—é, –í–∞—à –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å = {money[winMoney]} —Ä—É–±–ª–µ–πü§ë! –í—ã –æ–¥–µ—Ä–∂–∞–ª–∏ –ø–æ–±–µ–¥—Éüò≤! –•–æ—Ç–∏—Ç–µ —Å—ã–≥—Ä–∞—Ç—å –µ—â–µ —Ä–∞–∑?",reply_markup=kb.keyAgain)
    elif ask < 4 and buttonCondition == True:
        await callback.message.answer(f"–°–æ–≤–µ—Ä—à–µ–Ω–Ω–æ –≤–µ—Ä–Ω–æ! –Ø –í–∞—Å –ø–æ–∑–¥—Ä–∞–≤–ª—è—é –Ω–∞ –í–∞—à–µ–º –±–∞–ª–∞–Ω—Å–µ —Ç–µ–ø–µ—Ä—å {money[winMoney]} —Ä—É–±–ª–µ–πü§ë! –î–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –≤–æ–ø—Ä–æ—Å—É - "
                                  "–Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É \"–°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å\", –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –∑–∞–±—Ä–∞—Ç—å –≤—ã–∏–≥—Ä—ã—à - \"–ó–∞–±—Ä–∞—Ç—å –≤—ã–∏–≥—Ä—ã—à\"", reply_markup=kb.keyNext)

    if ask < 5 and buttonCondition == True:
        ask += 1
        winMoney += 1
        buttonCondition = False

@router.message(F.text == '–°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å')
async def next(message:Message):
    global buttonCondition, ask
    buttonCondition = True
    if ask >= 5:
        await message.reply("–í—ã –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã")
    else:
        await message.reply(f'–•–æ—Ä–æ—à–æ, –≤–æ–ø—Ä–æ—Å ‚Ññ{ask+1}: {asks[ask]}', reply_markup=kb.key[ask])


@router.callback_query(F.data == 'false')
async def false(callback: CallbackQuery):
    global buttonCondition
    if buttonCondition == False:
        await callback.answer("–í—ã —É–∂–µ –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å")
    else:
        await callback.answer()
        await callback.message.answer("–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –í—ã –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ, –±–∞–ª–∞–Ω—Å –í–∞—à –æ–±–Ω—É–ª—è–µ—Ç—Å—è, –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏üò©. –•–æ—Ç–∏—Ç–µ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â–µ?",reply_markup=kb.keyAgain)
    buttonCondition = False

@router.message(F.text == '–ó–∞–±—Ä–∞—Ç—å –≤—ã–∏–≥—Ä—ã—à')
async def win(message:Message):
    global winMoney, ask
    await message.reply(f"–ü–æ–∑–¥–∞–≤–ª—è–µ–º —Å –ø–æ–±–µ–¥–æ–πüòä, –í–∞—à –±–∞–ª–∞–Ω—Å = {money[winMoney-1]} —Ä—É–±–ª–µ–π ü§ë! –•–æ—Ç–∏—Ç–µ —Å—ã–≥—Ä–∞—Ç—å –µ—â–µ —Ä–∞–∑?",reply_markup=kb.keyAgain)

@router.message(F.text == '–ù–µ—Ç')
async def no(message:Message):
    await message.reply(f"–•–æ—Ä–æ—à–æ, {message.from_user.full_name}, –∂–¥–µ–º –í–∞—à–µ–≥–æ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è!ü•∞ü•∞ü§ó")